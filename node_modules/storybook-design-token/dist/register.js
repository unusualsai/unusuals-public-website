"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var addons_1 = require("@storybook/addons");
var components_1 = require("@storybook/components");
var Panel_1 = require("./components/Panel");
var css_parser_1 = require("./parsers/css.parser");
var less_parser_1 = require("./parsers/less.parser");
var scss_parser_1 = require("./parsers/scss.parser");
var svg_icon_parser_1 = require("./parsers/svg-icon.parser");
var shared_1 = require("./shared");
addons_1.default.register(shared_1.ADDON_ID, function (api) {
    var channel = addons_1.default.getChannel();
    var parsedCss;
    var parsedLess;
    var parsedScss;
    var parsedSvgIcons;
    var parsed;
    addons_1.default.addPanel(shared_1.PANEL_ID, {
        title: shared_1.PANEL_TITLE,
        type: addons_1.types.PANEL,
        render: function (_a) {
            var active = _a.active, key = _a.key;
            var storyData = api.getCurrentStoryData();
            var cssParser = new css_parser_1.CssParser();
            var lessParser = new less_parser_1.LessParser();
            var scssParser = new scss_parser_1.ScssParser();
            var svgIconParser = new svg_icon_parser_1.SvgIconParser();
            var files = storyData
                ? storyData.parameters.designToken.files
                : undefined;
            if (files) {
                if (!checkFilesFormat(files)) {
                    return;
                }
                parsedCss = parsedCss || cssParser.parse(files);
                parsedLess = parsedLess || lessParser.parse(files);
                parsedScss = parsedScss || scssParser.parse(files);
                parsedSvgIcons = parsedSvgIcons || svgIconParser.parse(files);
                parsed = {
                    hardCodedValues: __spreadArrays(parsedCss.hardCodedValues, parsedLess.hardCodedValues, parsedScss.hardCodedValues),
                    keyframes: parsedCss.keyframes + parsedLess.keyframes + parsedScss.keyframes,
                    tokenGroups: __spreadArrays(parsedCss.tokenGroups, parsedLess.tokenGroups, parsedScss.tokenGroups, parsedSvgIcons.tokenGroups)
                };
            }
            return (parsed && (React.createElement(components_1.AddonPanel, { key: key, active: active },
                React.createElement(Panel_1.DesignTokenPanel, { channel: channel, api: api, active: active, hardCodedValues: parsed.hardCodedValues, keyframes: parsed.keyframes, tokenGroups: parsed.tokenGroups }))));
        }
    });
});
var checkFilesFormat = function (files) {
    if (files) {
        if ((files.css && files.css.find(function (file) { return typeof file === 'string'; })) ||
            (files.less && files.less.find(function (file) { return typeof file === 'string'; })) ||
            (files.scss && files.scss.find(function (file) { return typeof file === 'string'; }))) {
            console.error("[Storybook Design Token] Sorry, we had to change the configuration \n        format. Please check your storybook config.js against \n        https://github.com/UX-and-I/storybook-design-token#installation.");
            return false;
        }
    }
    return true;
};
