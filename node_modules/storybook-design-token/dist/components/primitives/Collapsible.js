"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_storage_hooks_1 = require("react-storage-hooks");
var theming_1 = require("@storybook/theming");
var Icons_1 = require("./Icons");
var Container = theming_1.styled.div(function () { return ({
    border: '1px solid #dedede',
    borderRadius: '4px',
    '&:not(:last-child)': {
        marginBottom: '12px'
    }
}); });
var Header = theming_1.styled.div(function () { return ({
    alignItems: 'center',
    cursor: 'pointer',
    display: 'flex',
    fontWeight: 500,
    padding: '8px',
    '&:hover': {
        color: '#1ea7fd'
    },
    '& > svg': {
        height: '15px',
        marginRight: '4px',
        width: '15px'
    }
}); });
var Body = theming_1.styled.div(function () { return ({
    borderTop: '1px solid #dedede',
    display: 'flex',
    flexWrap: 'wrap',
    overflow: 'auto',
    padding: '8px 4px',
    '& > *': {
        flexBasis: '100%',
        flexGrow: 0,
        flexShrink: 0,
        marginBottom: '8px'
    }
}); });
exports.Collapsible = function (_a) {
    var children = _a.children, id = _a.id, title = _a.title;
    var _b = react_storage_hooks_1.useLocalStorageState("SB_DESIGN_TOKEN_EXPANSION:" + id, false), expanded = _b[0], setExpanded = _b[1];
    return (React.createElement(Container, null,
        React.createElement(Header, { id: id, onClick: function () { return setExpanded(!expanded); } },
            !expanded ? Icons_1.IconChevronRight : Icons_1.IconChevronDown,
            title),
        expanded && React.createElement(Body, null, children)));
};
