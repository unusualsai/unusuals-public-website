"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var react_storage_hooks_1 = require("react-storage-hooks");
var theming_1 = require("@storybook/theming");
var Container = theming_1.styled.div(function () { return ({
    backgroundColor: '#f5f5f5',
    borderRadius: '6px',
    display: 'flex',
    padding: '4px'
}); });
var Button = theming_1.styled.button(function () { return ({
    backgroundColor: 'transparent',
    border: 'none',
    borderRadius: '4px',
    cursor: 'pointer',
    flexBasis: 'calc(50% - 4px)',
    flexShrink: 0,
    fontWeight: 500,
    padding: '8px',
    '&:not(:first-of-type)': {
        marginLeft: '2px'
    },
    '&:not(:last-of-type)': {
        marginRight: '2px'
    },
    '&:hover:not(.active)': {
        backgroundColor: '#dedede'
    },
    '&.active': {
        backgroundColor: '#1ea7fd',
        color: '#fff'
    }
}); });
exports.ViewSwitch = function (_a) {
    var onChange = _a.onChange, value = _a.value;
    var _b = react_storage_hooks_1.useLocalStorageState("SB_DESIGN_TOKEN_EXPANSION:VIEW_TYPE", value), persistedValue = _b[0], setPersistedValue = _b[1];
    var changeValue = React.useCallback(function (newValue) {
        if (value !== newValue) {
            setPersistedValue(newValue);
            onChange(newValue);
        }
    }, [value]);
    if (persistedValue && persistedValue !== value) {
        onChange(persistedValue);
    }
    return (React.createElement(Container, null,
        React.createElement(Button, { className: value === 'card' ? 'active' : '', onClick: function () { return changeValue('card'); }, type: "button" }, "Card View"),
        React.createElement(Button, { className: value === 'table' ? 'active' : '', onClick: function () { return changeValue('table'); }, type: "button" }, "Table View")));
};
