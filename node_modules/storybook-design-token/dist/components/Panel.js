"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var theming_1 = require("@storybook/theming");
var HardCodedValuesTable_1 = require("./HardCodedValuesTable");
var TokenOverview_1 = require("./TokenOverview");
var ViewSwitch_1 = require("./ViewSwitch");
var Container = theming_1.styled.div(function () { return ({
    padding: '12px'
}); });
var Separator = theming_1.styled.hr(function () { return ({
    backgroundColor: '#f1f1f1',
    border: 'none',
    height: '1px',
    margin: '12px 0',
    width: '100%'
}); });
var DesignTokenPanel = /** @class */ (function (_super) {
    __extends(DesignTokenPanel, _super);
    function DesignTokenPanel(props) {
        var _this = _super.call(this, props) || this;
        _this.state = { viewType: 'card' };
        return _this;
    }
    DesignTokenPanel.prototype.render = function () {
        var _this = this;
        if (!this.props.active) {
            return React.createElement(React.Fragment, null, "Test");
        }
        var tokenGroups = this.props.tokenGroups.sort(function (a, b) {
            var labelA = a.label.toUpperCase();
            var labelB = b.label.toUpperCase();
            return labelA < labelB ? -1 : labelA > labelB ? 1 : 0;
        });
        return (React.createElement(React.Fragment, null,
            React.createElement("style", null, this.props.keyframes),
            React.createElement(Container, { className: "design-token-container" },
                React.createElement(ViewSwitch_1.ViewSwitch, { onChange: function (newViewType) {
                        return _this.setState(function () { return ({
                            viewType: newViewType
                        }); });
                    }, value: this.state.viewType }),
                React.createElement(Separator, null),
                tokenGroups
                    .filter(function (tokenGroup) { return tokenGroup.tokens.length > 0; })
                    .map(function (tokenGroup, index) { return (React.createElement(TokenOverview_1.TokenOverview, { key: index, tokenGroup: tokenGroup, viewType: _this.state.viewType })); }),
                React.createElement(Separator, null),
                this.props.hardCodedValues.length ? (React.createElement(HardCodedValuesTable_1.HardCodedValuesTable, { hardCodedValues: this.props.hardCodedValues })) : null)));
    };
    return DesignTokenPanel;
}(React.Component));
exports.DesignTokenPanel = DesignTokenPanel;
