/// <reference types="react" />
export declare const useLocalStorageState: <S>(key: string, defaultState: S | (() => S)) => [S, import("react").Dispatch<import("react").SetStateAction<S>>, Error | undefined];
export declare const useSessionStorageState: <S>(key: string, defaultState: S | (() => S)) => [S, import("react").Dispatch<import("react").SetStateAction<S>>, Error | undefined];
export declare const useLocalStorageReducer: <R extends import("react").Reducer<any, any>, I>(key: string, reducer: R, initializerArg: I & import("react").ReducerState<R>, initializer?: ((arg: I & import("react").ReducerState<R>) => import("react").ReducerState<R>) | undefined) => [import("react").ReducerState<R>, import("react").Dispatch<import("react").ReducerAction<R>>, Error | undefined];
export declare const useSessionStorageReducer: <R extends import("react").Reducer<any, any>, I>(key: string, reducer: R, initializerArg: I & import("react").ReducerState<R>, initializer?: ((arg: I & import("react").ReducerState<R>) => import("react").ReducerState<R>) | undefined) => [import("react").ReducerState<R>, import("react").Dispatch<import("react").ReducerAction<R>>, Error | undefined];
