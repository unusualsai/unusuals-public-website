import { BLOCKS, INLINES } from '@contentful/rich-text-types';
import { Handler, Context, ContentfulTextNode, ContentfulRootNode, ContentfulParagraph, ContentfulHeading, ContentfulQuote, ContentfulHr, ContentfulList, ContentfulListItem, ContentfulHyperLink } from './types';
export declare const root: Handler<ContentfulRootNode>;
export declare const span: Handler<ContentfulTextNode>;
export declare const paragraph: Handler<ContentfulParagraph>;
export declare const thematicBreak: Handler<ContentfulHr>;
export declare const heading: Handler<ContentfulHeading>;
export declare const blockquote: Handler<ContentfulQuote>;
export declare const list: Handler<ContentfulList>;
export declare const listItem: Handler<ContentfulListItem>;
export declare const codeBlock: Handler<ContentfulParagraph>;
export declare const link: Handler<ContentfulHyperLink>;
export declare function noop(): Promise<void>;
export declare const wrapListItems: Handler<ContentfulListItem>;
export declare function resolveUrl(context: Context, url: string | null | undefined): string;
export declare const handlers: {
    text: Handler<ContentfulTextNode>;
    document: Handler<ContentfulRootNode>;
    paragraph: Handler<ContentfulParagraph>;
    "heading-1": Handler<ContentfulHeading>;
    "heading-2": Handler<ContentfulHeading>;
    "heading-3": Handler<ContentfulHeading>;
    "heading-4": Handler<ContentfulHeading>;
    "heading-5": Handler<ContentfulHeading>;
    "heading-6": Handler<ContentfulHeading>;
    "unordered-list": Handler<ContentfulList>;
    "ordered-list": Handler<ContentfulList>;
    "list-item": Handler<ContentfulListItem>;
    blockquote: Handler<ContentfulQuote>;
    hr: Handler<ContentfulHr>;
    hyperlink: Handler<ContentfulHyperLink>;
    "embedded-entry-inline": typeof noop;
    "embedded-asset-block": typeof noop;
    "embedded-entry-block": typeof noop;
    "asset-hyperlink": typeof noop;
    "entry-hyperlink": typeof noop;
};
